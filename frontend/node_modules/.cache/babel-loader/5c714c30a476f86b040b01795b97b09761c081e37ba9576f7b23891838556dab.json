{"ast":null,"code":"var _jsxFileName = \"C:\\\\Infosys Hackathon\\\\carbon-credit-platform\\\\frontend\\\\src\\\\components\\\\Onboarding.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Onboarding.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Onboarding() {\n  _s();\n  const [name, setName] = useState('');\n  const [projectId, setProjectId] = useState(null);\n  const handleRegister = e => {\n    e.preventDefault();\n    fetch('http://localhost:5000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name\n      })\n    }).then(res => res.json()).then(data => {\n      setProjectId(data.project_id);\n      alert('Project registered! Project ID: ' + data.project_id);\n    });\n  };\n  const handleVerify = () => {\n    if (!projectId) return;\n    fetch('http://localhost:5000/verify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        project_id: projectId\n      })\n    }).then(res => res.json()).then(data => {\n      alert('Project verified!');\n    });\n  };\n  const handleIssueCredit = () => {\n    if (!projectId) return;\n    fetch('http://localhost:5000/issue_credit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        project_id: projectId,\n        amount: 10,\n        owner: 'You'\n      })\n    }).then(res => res.json()).then(data => {\n      alert('Credit issued!');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Project Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerify,\n        children: \"Verify Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleIssueCredit,\n        children: \"Issue Credit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Onboarding, \"YmqRMnuWqi+kcWVBrCbGFZfklHw=\");\n_c = Onboarding;\nexport default Onboarding;\nvar _c;\n$RefreshReg$(_c, \"Onboarding\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Onboarding","_s","name","setName","projectId","setProjectId","handleRegister","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","project_id","alert","handleVerify","handleIssueCredit","amount","owner","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","required","type","onClick","_c","$RefreshReg$"],"sources":["C:/Infosys Hackathon/carbon-credit-platform/frontend/src/components/Onboarding.js"],"sourcesContent":["// frontend/src/components/Onboarding.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction Onboarding() {\r\n  const [name, setName] = useState('');\r\n  const [projectId, setProjectId] = useState(null);\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    fetch('http://localhost:5000/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setProjectId(data.project_id);\r\n        alert('Project registered! Project ID: ' + data.project_id);\r\n      });\r\n  };\r\n\r\n  const handleVerify = () => {\r\n    if (!projectId) return;\r\n    fetch('http://localhost:5000/verify', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ project_id: projectId })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        alert('Project verified!');\r\n      });\r\n  };\r\n\r\n  const handleIssueCredit = () => {\r\n    if (!projectId) return;\r\n    fetch('http://localhost:5000/issue_credit', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ project_id: projectId, amount: 10, owner: 'You' })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        alert('Credit issued!');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleRegister}>\r\n        <h2>Register Project</h2>\r\n        <input value={name} onChange={e => setName(e.target.value)} placeholder=\"Project Name\" required />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      {projectId && (\r\n        <div>\r\n          <button onClick={handleVerify}>Verify Project</button>\r\n          <button onClick={handleIssueCredit}>Issue Credit</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Onboarding;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}