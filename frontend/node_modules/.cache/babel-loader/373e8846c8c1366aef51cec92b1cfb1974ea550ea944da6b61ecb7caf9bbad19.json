{"ast":null,"code":"var _jsxFileName = \"C:\\\\Infosys Hackathon\\\\carbon-credit-platform\\\\frontend\\\\src\\\\components\\\\BoardVerify.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardVerify({\n  userEmail,\n  setRefresh,\n  refresh\n}) {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const fetchProjects = () => {\n    fetch('http://localhost:5000/projects').then(res => res.json()).then(data => setProjects(data));\n  };\n  useEffect(() => {\n    fetchProjects();\n    // eslint-disable-next-line\n  }, [refresh]);\n  const handleVerify = projectId => {\n    fetch('http://localhost:5000/verify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        project_id: projectId,\n        verifier_email: userEmail\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.status === 'verified') {\n        alert('Project verified!');\n        setRefresh(r => r + 1);\n      } else {\n        alert(data.message || 'Verification failed');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.filter(p => p.status !== 'verified').map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [project.name, \" (ID: \", project.project_id, \") - Owner: \", project.owner_email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVerify(project.project_id),\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, project.project_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardVerify, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = BoardVerify;\nexport default BoardVerify;\nvar _c;\n$RefreshReg$(_c, \"BoardVerify\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BoardVerify","userEmail","setRefresh","refresh","_s","projects","setProjects","fetchProjects","fetch","then","res","json","data","handleVerify","projectId","method","headers","body","JSON","stringify","project_id","verifier_email","status","alert","r","message","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","p","map","project","name","owner_email","onClick","style","marginLeft","_c","$RefreshReg$"],"sources":["C:/Infosys Hackathon/carbon-credit-platform/frontend/src/components/BoardVerify.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction BoardVerify({ userEmail, setRefresh, refresh }) {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const fetchProjects = () => {\r\n    fetch('http://localhost:5000/projects')\r\n      .then(res => res.json())\r\n      .then(data => setProjects(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n    // eslint-disable-next-line\r\n  }, [refresh]);\r\n\r\n  const handleVerify = (projectId) => {\r\n    fetch('http://localhost:5000/verify', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ project_id: projectId, verifier_email: userEmail })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.status === 'verified') {\r\n          alert('Project verified!');\r\n          setRefresh(r => r + 1);\r\n        } else {\r\n          alert(data.message || 'Verification failed');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Verify Projects</h2>\r\n      <ul>\r\n        {projects.filter(p => p.status !== 'verified').map(project => (\r\n          <li key={project.project_id}>\r\n            {project.name} (ID: {project.project_id}) - Owner: {project.owner_email}\r\n            <button onClick={() => handleVerify(project.project_id)} style={{ marginLeft: '10px' }}>\r\n              Verify\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardVerify;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAC;EAAEC,SAAS;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1BC,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIN,WAAW,CAACM,IAAI,CAAC,CAAC;EACpC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdW,aAAa,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMU,YAAY,GAAIC,SAAS,IAAK;IAClCN,KAAK,CAAC,8BAA8B,EAAE;MACpCO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,UAAU,EAAEN,SAAS;QAAEO,cAAc,EAAEpB;MAAU,CAAC;IAC3E,CAAC,CAAC,CACCQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACU,MAAM,KAAK,UAAU,EAAE;QAC9BC,KAAK,CAAC,mBAAmB,CAAC;QAC1BrB,UAAU,CAACsB,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;MACxB,CAAC,MAAM;QACLD,KAAK,CAACX,IAAI,CAACa,OAAO,IAAI,qBAAqB,CAAC;MAC9C;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB/B,OAAA;MAAA2B,QAAA,EACGrB,QAAQ,CAAC0B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACV,MAAM,KAAK,UAAU,CAAC,CAACW,GAAG,CAACC,OAAO,iBACxDnC,OAAA;QAAA2B,QAAA,GACGQ,OAAO,CAACC,IAAI,EAAC,QAAM,EAACD,OAAO,CAACd,UAAU,EAAC,aAAW,EAACc,OAAO,CAACE,WAAW,eACvErC,OAAA;UAAQsC,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACqB,OAAO,CAACd,UAAU,CAAE;UAACkB,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAb,QAAA,EAAC;QAExF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJFI,OAAO,CAACd,UAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKvB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC1B,EAAA,CA9CQJ,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAgDpB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}