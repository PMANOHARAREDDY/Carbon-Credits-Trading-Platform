{"ast":null,"code":"var _jsxFileName = \"C:\\\\Infosys Hackathon\\\\carbon-credit-platform\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  userEmail,\n  refresh\n}) {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [credits, setCredits] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/projects').then(res => res.json()).then(setProjects);\n    fetch('http://localhost:5000/board/creditwise_history').then(res => res.json()).then(data => {\n      // Find all credits ever owned by the user (issued, purchased, or currently owned)\n      const everOwned = data.filter(credit => credit.issuer_email === userEmail || credit.history.some(h => h.action === 'purchased' && h.by === userEmail) || credit.owner_email === userEmail);\n      setCredits(everOwned);\n    });\n  }, [refresh]);\n  const getProject = projectId => projects.find(p => p.project_id === projectId);\n  const isCurrentOwner = credit => credit.owner_email === userEmail;\n  const getBuyer = credit => {\n    const purchaseEvents = credit.history.filter(h => h.action === 'purchased');\n    if (purchaseEvents.length > 0) {\n      return purchaseEvents[purchaseEvents.length - 1].by;\n    }\n    return credit.owner_email;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Credits (Issued, Owned, or Sold)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), credits.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No credits issued or owned yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this), credits.map(credit => {\n      const project = getProject(credit.project_id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card credit-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Credit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }, this), \" ID: \", credit.credit_id, \", Amount: \", credit.amount, \", Status: \", credit.status, \", For Sale: \", credit.for_sale ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Project:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 16\n          }, this), \" \", project ? `${project.name} (ID: ${project.project_id}) - Owner: ${project.owner_email} - Status: ${project.status}` : 'Project details not found']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), isCurrentOwner(credit) ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-green\",\n          children: \"You currently own this credit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-blue\",\n          children: [\"Sold to \", getBuyer(credit)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, credit.credit_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ZP6FtXbP+fBOIZPJQ7COoBgPh5A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","userEmail","refresh","_s","projects","setProjects","credits","setCredits","fetch","then","res","json","data","everOwned","filter","credit","issuer_email","history","some","h","action","by","owner_email","getProject","projectId","find","p","project_id","isCurrentOwner","getBuyer","purchaseEvents","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","credit_id","amount","status","for_sale","name","_c","$RefreshReg$"],"sources":["C:/Infosys Hackathon/carbon-credit-platform/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Dashboard({ userEmail, refresh }) {\r\n  const [projects, setProjects] = useState([]);\r\n  const [credits, setCredits] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/projects')\r\n      .then(res => res.json())\r\n      .then(setProjects);\r\n    fetch('http://localhost:5000/board/creditwise_history')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Find all credits ever owned by the user (issued, purchased, or currently owned)\r\n        const everOwned = data.filter(credit =>\r\n          credit.issuer_email === userEmail ||\r\n          credit.history.some(h => h.action === 'purchased' && h.by === userEmail) ||\r\n          credit.owner_email === userEmail\r\n        );\r\n        setCredits(everOwned);\r\n      });\r\n  }, [refresh]);\r\n\r\n  const getProject = (projectId) =>\r\n    projects.find(p => p.project_id === projectId);\r\n\r\n  const isCurrentOwner = (credit) => credit.owner_email === userEmail;\r\n\r\n  const getBuyer = (credit) => {\r\n    const purchaseEvents = credit.history.filter(h => h.action === 'purchased');\r\n    if (purchaseEvents.length > 0) {\r\n      return purchaseEvents[purchaseEvents.length - 1].by;\r\n    }\r\n    return credit.owner_email;\r\n  };\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <h2>Your Credits (Issued, Owned, or Sold)</h2>\r\n      {credits.length === 0 && <p>No credits issued or owned yet.</p>}\r\n      {credits.map(credit => {\r\n        const project = getProject(credit.project_id);\r\n        return (\r\n          <div key={credit.credit_id} className=\"card credit-info\">\r\n            <p><strong>Credit:</strong> ID: {credit.credit_id}, Amount: {credit.amount}, Status: {credit.status}, For Sale: {credit.for_sale ? 'Yes' : 'No'}</p>\r\n            <p><strong>Project:</strong> {project ? `${project.name} (ID: ${project.project_id}) - Owner: ${project.owner_email} - Status: ${project.status}` : 'Project details not found'}</p>\r\n            {isCurrentOwner(credit) ? (\r\n              <p className=\"status-green\">You currently own this credit.</p>\r\n            ) : (\r\n              <p className=\"status-blue\">\r\n                Sold to {getBuyer(credit)}\r\n              </p>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}