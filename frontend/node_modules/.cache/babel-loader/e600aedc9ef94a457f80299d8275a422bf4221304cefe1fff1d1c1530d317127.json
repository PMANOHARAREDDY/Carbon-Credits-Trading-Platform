{"ast":null,"code":"var _jsxFileName = \"C:\\\\Infosys Hackathon\\\\carbon-credit-platform\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  userEmail,\n  refresh\n}) {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [credits, setCredits] = useState([]);\n  const fetchData = () => {\n    fetch('http://localhost:5000/projects').then(res => res.json()).then(data => setProjects(data));\n    fetch('http://localhost:5000/list_credits?user_email=' + userEmail).then(res => res.json()).then(data => setCredits(data));\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, [refresh]);\n  const handleSellAllCredits = projectId => {\n    // Filter credits owned by user, verified, not for sale, not blocked, and belonging to the project\n    const creditsToSell = credits.filter(c => c.project_id === projectId && c.owner_email === userEmail && c.status === 'verified' && !c.for_sale && !c.blocked);\n    if (creditsToSell.length === 0) {\n      alert('No eligible credits to put for sale for this project.');\n      return;\n    }\n    Promise.all(creditsToSell.map(credit => fetch('http://localhost:5000/set_for_sale', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        credit_id: credit.credit_id,\n        user_email: userEmail\n      })\n    }))).then(() => {\n      alert('All eligible credits for this project are now for sale!');\n      fetchData();\n    }).catch(() => {\n      alert('Failed to put some credits for sale.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registered Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [project.name, \" (ID: \", project.project_id, \") - Status: \", project.status, \" - Owner: \", project.owner_email, project.status === 'verified' && project.owner_email === userEmail && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSellAllCredits(project.project_id),\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Sell All Eligible Credits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, project.project_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Issued Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: credits.map(credit => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Credit ID: \", credit.credit_id, \", Project ID: \", credit.project_id, \", Amount: \", credit.amount, \", Issuer: \", credit.issuer_email, \", Status: \", credit.status]\n      }, credit.credit_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ZP6FtXbP+fBOIZPJQ7COoBgPh5A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","userEmail","refresh","_s","projects","setProjects","credits","setCredits","fetchData","fetch","then","res","json","data","handleSellAllCredits","projectId","creditsToSell","filter","c","project_id","owner_email","status","for_sale","blocked","length","alert","Promise","all","map","credit","method","headers","body","JSON","stringify","credit_id","user_email","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","project","name","style","marginLeft","amount","issuer_email","_c","$RefreshReg$"],"sources":["C:/Infosys Hackathon/carbon-credit-platform/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Dashboard({ userEmail, refresh }) {\r\n  const [projects, setProjects] = useState([]);\r\n  const [credits, setCredits] = useState([]);\r\n\r\n  const fetchData = () => {\r\n    fetch('http://localhost:5000/projects')\r\n      .then(res => res.json())\r\n      .then(data => setProjects(data));\r\n    fetch('http://localhost:5000/list_credits?user_email=' + userEmail)\r\n      .then(res => res.json())\r\n      .then(data => setCredits(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, [refresh]);\r\n\r\n  const handleSellAllCredits = (projectId) => {\r\n    // Filter credits owned by user, verified, not for sale, not blocked, and belonging to the project\r\n    const creditsToSell = credits.filter(c =>\r\n      c.project_id === projectId &&\r\n      c.owner_email === userEmail &&\r\n      c.status === 'verified' &&\r\n      !c.for_sale &&\r\n      !c.blocked\r\n    );\r\n\r\n    if (creditsToSell.length === 0) {\r\n      alert('No eligible credits to put for sale for this project.');\r\n      return;\r\n    }\r\n\r\n    Promise.all(\r\n      creditsToSell.map(credit =>\r\n        fetch('http://localhost:5000/set_for_sale', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ credit_id: credit.credit_id, user_email: userEmail })\r\n        })\r\n      )\r\n    ).then(() => {\r\n      alert('All eligible credits for this project are now for sale!');\r\n      fetchData();\r\n    }).catch(() => {\r\n      alert('Failed to put some credits for sale.');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <button onClick={fetchData}>Refresh</button>\r\n\r\n      <h3>Registered Projects</h3>\r\n      <ul>\r\n        {projects.map(project => (\r\n          <li key={project.project_id}>\r\n            {project.name} (ID: {project.project_id}) - Status: {project.status} - Owner: {project.owner_email}\r\n            {project.status === 'verified' && project.owner_email === userEmail && (\r\n              <button\r\n                onClick={() => handleSellAllCredits(project.project_id)}\r\n                style={{ marginLeft: '10px' }}\r\n              >\r\n                Sell All Eligible Credits\r\n              </button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Issued Credits</h3>\r\n      <ul>\r\n        {credits.map(credit => (\r\n          <li key={credit.credit_id}>\r\n            Credit ID: {credit.credit_id}, Project ID: {credit.project_id}, Amount: {credit.amount}, Issuer: {credit.issuer_email}, Status: {credit.status}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}